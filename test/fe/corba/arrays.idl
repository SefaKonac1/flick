/*
 * Copyright (c) 1995, 1996 The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 *
 * This file is part of Flick, the Flexible IDL Compiler Kit.
 *
 * Flick is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Flick is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Flick; see the file COPYING.  If not, write to
 * the Free Software Foundation, 59 Temple Place #330, Boston, MA 02111, USA.
 */

/* This should test for alignment constraints on arrays */

// This is a data structure that ends in unconstrained alignment
struct end {
	long elem1;
	char elem2;
};
// This is a data structure that begins in unconstrained alignment
struct begin {
	char elem1;
	long elem2;
};

struct cLd {
	char first;
	long data[50];
	double last;
};

struct dLc {
	double first;
	long data[50];
	char last;
};

struct sLs {
	short first;
	long data[50];
	short last;
};

struct cLCd {
	char first;
	end data[50];
	double last;
};

struct dLCc {
	double first;
	end data[50];
	char last;
};

struct sLCs {
	short first;
	end data[50];
	short last;
};

struct cCLd {
	char first;
	begin data[50];
	double last;
};

struct dCLc {
	double first;
	begin data[50];
	char last;
};

struct sCLs {
	short first;
	begin data[50];
	short last;
};

#define test(t) t test_##t (in t inp, inout t iop, out t outp)

interface arrays {
	test(cLd);
	test(dLc);
	test(sLs);
	test(cLCd);
	test(dLCc);
	test(sLCs);
	test(cCLd);
	test(dCLc);
	test(sCLs);
};

