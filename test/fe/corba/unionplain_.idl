/*
 * Copyright (c) 1995, 1996, 1999 The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 *
 * This file is part of Flick, the Flexible IDL Compiler Kit.
 *
 * Flick is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Flick is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Flick; see the file COPYING.  If not, write to
 * the Free Software Foundation, 59 Temple Place #330, Boston, MA 02111, USA.
 */

union Foo switch (long) {
case 1: long x;
case 2: short y;
default: char z;
};

union Foo2 switch (char) {
 case 'a': long x;
 case 'b': short y;
 case 'c': char z; 
};

union Foo3 switch (short) {
 case -1: short a;
 case 50: long b;
 default: char c;
};

union Foo4 switch (long) {
 case 1: string a;
 case 2: sequence<long,10>b;
 default: long c;
};

interface un {
	Foo one(in Foo a, inout Foo b, out Foo c);
	Foo2 two(in Foo2 a, inout Foo2 b, out Foo2 c);
	Foo3 three(in Foo3 a, inout Foo3 b, out Foo3 c);
	Foo4 four(in Foo4 a, inout Foo4 b, out Foo4 c);
};	

