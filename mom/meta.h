/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _META_H_RPCGEN
#define	_META_H_RPCGEN

#include <rpc/rpc.h>
#ifndef _flick_meta_h
#define _flick_meta_h

#include <rpc/types.h>
#include <rpc/xdr.h>

typedef int io_file_index;
#define	IO_FILE_INPUT 0x00000001
#define	IO_FILE_OUTPUT 0x00000002
#define	IO_FILE_BUILTIN 0x00000004
#define	IO_FILE_ROOT 0x00000008
#define	IO_FILE_SYSTEM 0x00000010

struct io_file {
	char *id;
	u_int flags;
	int references;
	struct {
		u_int includes_len;
		io_file_index *includes_val;
	} includes;
};
typedef struct io_file io_file;
#define	IO_FILE_MASK_HAS_ID 0x00000001
#define	IO_FILE_MASK_FILE_PART 0x00000002
#define	IO_FILE_MASK_DIR_PART 0x00000004

struct io_file_mask {
	u_int mask_flags;
	char *id;
	u_int set_flags;
	u_int unset_flags;
};
typedef struct io_file_mask io_file_mask;

typedef int data_channel_index;
#define	PASSTHRU_DATA_CHANNEL 0
#define	DATA_CHANNEL_SQUELCHED 0x00000001
#define	DATA_CHANNEL_DECL 0x00000002
#define	DATA_CHANNEL_IMPL 0x00000004

struct data_channel {
	io_file_index input;
	char *id;
	u_int flags;
	struct {
		u_int outputs_len;
		io_file_index *outputs_val;
	} outputs;
};
typedef struct data_channel data_channel;
#define	DATA_CHANNEL_MASK_HAS_INPUT 0x00000001
#define	DATA_CHANNEL_MASK_HAS_ID 0x00000002

struct data_channel_mask {
	u_int mask_flags;
	io_file_mask *input;
	char *id;
	u_int set_flags;
	u_int unset_flags;
};
typedef struct data_channel_mask data_channel_mask;

struct meta {
	struct {
		u_int files_len;
		io_file *files_val;
	} files;
	struct {
		u_int channels_len;
		data_channel *channels_val;
	} channels;
};
typedef struct meta meta;
#endif /* _flick_meta_h */

/* the xdr functions */
extern bool_t xdr_io_file_index();
extern bool_t xdr_io_file();
extern bool_t xdr_io_file_mask();
extern bool_t xdr_data_channel_index();
extern bool_t xdr_data_channel();
extern bool_t xdr_data_channel_mask();
extern bool_t xdr_meta();

#endif /* !_META_H_RPCGEN */
